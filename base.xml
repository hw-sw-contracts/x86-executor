<root >
    <extension ex="BASE">
        <instruction asm="ADC" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ADC" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ADC" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ADC" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ADC" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ADC" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="8">AL</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="16">AX</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="64">RAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADC" category="BINARY" cpl="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADC" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADC" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADC" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADC" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADC" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADC" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADC" category="BINARY" cpl="3" extension="BASE" locked="1" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK REX ADC" category="BINARY" cpl="3" extension="BASE" locked="1" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADC" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADC" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADC" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ADD" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ADD" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ADD" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ADD" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ADD" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="8">AL</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="16">AX</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ADD" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="64">RAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADD" category="BINARY" cpl="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADD" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADD" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADD" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADD" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADD" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADD" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADD" category="BINARY" cpl="3" extension="BASE" locked="1" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK REX ADD" category="BINARY" cpl="3" extension="BASE" locked="1" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADD" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADD" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK ADD" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX AND" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX AND" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX AND" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX AND" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX AND" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="8">AL</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="16">AX</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="AND" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="64">RAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK AND" category="LOGICAL" cpl="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK AND" category="LOGICAL" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK AND" category="LOGICAL" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK AND" category="LOGICAL" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK AND" category="LOGICAL" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK AND" category="LOGICAL" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK AND" category="LOGICAL" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK AND" category="LOGICAL" cpl="3" extension="BASE" locked="1" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK REX AND" category="LOGICAL" cpl="3" extension="BASE" locked="1" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK AND" category="LOGICAL" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK AND" category="LOGICAL" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK AND" category="LOGICAL" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSF" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSF" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSF" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSF" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSF" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSF" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSR" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSR" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSR" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSR" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSR" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSR" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BSWAP" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
        </instruction>
        <instruction asm="BSWAP" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
        </instruction>
        <instruction asm="BT" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BT" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BT" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BT" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BT" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BT" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BT" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BT" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BT" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BT" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BT" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BT" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTC" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTC" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTC" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTC" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTC" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTC" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTC" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTC" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTC" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTC" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTC" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTC" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTC" category="BITBYTE" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTC" category="BITBYTE" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTC" category="BITBYTE" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTC" category="BITBYTE" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTC" category="BITBYTE" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTC" category="BITBYTE" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTR" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTR" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTR" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTR" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTR" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTR" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTR" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTR" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTR" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTR" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTR" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTR" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTR" category="BITBYTE" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTR" category="BITBYTE" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTR" category="BITBYTE" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTR" category="BITBYTE" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTR" category="BITBYTE" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTR" category="BITBYTE" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTS" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTS" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTS" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTS" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTS" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTS" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTS" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTS" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTS" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTS" category="BITBYTE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTS" category="BITBYTE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="BTS" category="BITBYTE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTS" category="BITBYTE" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTS" category="BITBYTE" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTS" category="BITBYTE" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTS" category="BITBYTE" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTS" category="BITBYTE" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK BTS" category="BITBYTE" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="undef" flag_PF="undef" flag_SF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CALL FAR" category="CALL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="struct"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="4" seg="SS" suppressed="1" type="mem" w="1" width="32" xtype="int"/>
        </instruction>
        <instruction asm="CALL FAR" category="CALL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="48" xtype="struct"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="4" seg="SS" suppressed="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="CALL FAR" category="CALL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="80" xtype="struct"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="4" seg="SS" suppressed="1" type="mem" w="1" width="128" xtype="int"/>
        </instruction>
        <instruction asm="CALL" category="CALL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="4" seg="SS" suppressed="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="CALL" category="CALL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="4" seg="SS" suppressed="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="CALL" category="CALL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="4" seg="SS" suppressed="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="CBW" category="CONVERT" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="8">AL</op>
        </instruction>
        <instruction asm="CDQ" category="CONVERT" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="32">EAX</op>
        </instruction>
        <instruction asm="CLC" category="FLAGOP" cpl="3" extension="BASE">
            <op flag_CF="w" idx="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CLD" category="FLAGOP" cpl="3" extension="BASE">
            <op flag_DF="w" idx="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CLI" category="FLAGOP" cpl="3" extension="BASE">
            <op flag_IF="w" flag_IOPL="r" flag_VIF="w" idx="1" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CLTS" category="SYSTEM" cpl="0" extension="BASE">
        </instruction>
        <instruction asm="CMC" category="FLAGOP" cpl="3" extension="BASE">
            <op flag_CF="r/w" idx="1" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMOVB" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVB" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVB" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVB" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVB" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVB" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVBE" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVBE" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVBE" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVBE" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVBE" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVBE" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVL" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVL" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVL" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVL" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVL" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVL" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVLE" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVLE" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVLE" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVLE" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVLE" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVLE" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNB" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNB" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNB" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNB" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNB" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNB" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNBE" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNBE" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNBE" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNBE" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNBE" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNBE" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNL" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNL" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNL" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNL" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNL" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNL" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNLE" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNLE" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNLE" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNLE" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNLE" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNLE" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNO" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNO" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNO" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNO" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNO" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNO" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNP" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNP" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNP" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNP" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNP" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNP" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNS" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNS" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNS" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNS" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNS" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNS" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNZ" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNZ" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNZ" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNZ" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNZ" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVNZ" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVO" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVO" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVO" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVO" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVO" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVO" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVP" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVP" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVP" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVP" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVP" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVP" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVS" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVS" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVS" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVS" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVS" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVS" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVZ" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVZ" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVZ" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVZ" category="CMOV" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVZ" category="CMOV" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMOVZ" category="CMOV" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX CMP" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="mem" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX CMP" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="mem" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX CMP" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX CMP" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" width="8">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX CMP" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="8">AL</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="16">AX</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="32">EAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMP" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="64">RAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMPSB" category="STRINGOP" cpl="3" extension="BASE">
            <op base="RSI" idx="1" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="w" flag_CF="w" flag_DF="r" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMPSD" category="STRINGOP" cpl="3" extension="BASE">
            <op base="RSI" idx="1" r="1" seg="DS" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op flag_AF="w" flag_CF="w" flag_DF="r" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMPSW" category="STRINGOP" cpl="3" extension="BASE">
            <op base="RSI" idx="1" r="1" seg="DS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op flag_AF="w" flag_CF="w" flag_DF="r" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMPXCHG" category="SEMAPHORE" cpl="3" extension="BASE" rex="0">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="8">AL</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX CMPXCHG" category="SEMAPHORE" cpl="3" extension="BASE" rex="1">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="8">AL</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMPXCHG" category="SEMAPHORE" cpl="3" extension="BASE" rex="0">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="8">AL</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX CMPXCHG" category="SEMAPHORE" cpl="3" extension="BASE" rex="1">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="8">AL</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMPXCHG" category="SEMAPHORE" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMPXCHG" category="SEMAPHORE" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMPXCHG" category="SEMAPHORE" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RAX</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMPXCHG" category="SEMAPHORE" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMPXCHG" category="SEMAPHORE" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMPXCHG" category="SEMAPHORE" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RAX</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CMPXCHG8B" category="SEMAPHORE" cpl="3" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="64" xtype="i64"/>
            <op conditionalWrite="1" idx="2" r="1" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="4" r="1" suppressed="1" type="reg" width="32">ECX</op>
            <op idx="5" r="1" suppressed="1" type="reg" width="32">EBX</op>
            <op flag_ZF="w" idx="6" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK CMPXCHG8B" category="SEMAPHORE" cpl="3" extension="BASE" locked="1">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="64" xtype="i64"/>
            <op conditionalWrite="1" idx="2" r="1" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="4" r="1" suppressed="1" type="reg" width="32">ECX</op>
            <op idx="5" r="1" suppressed="1" type="reg" width="32">EBX</op>
            <op flag_ZF="w" idx="6" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK CMPXCHG" category="SEMAPHORE" cpl="3" extension="BASE" locked="1" rex="0">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="8">AL</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK REX CMPXCHG" category="SEMAPHORE" cpl="3" extension="BASE" locked="1" rex="1">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="8">AL</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK CMPXCHG" category="SEMAPHORE" cpl="3" eosz="1" extension="BASE" locked="1">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK CMPXCHG" category="SEMAPHORE" cpl="3" eosz="2" extension="BASE" locked="1">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK CMPXCHG" category="SEMAPHORE" cpl="3" eosz="3" extension="BASE" locked="1">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RAX</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="CPUID" category="MISC" cpl="3" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="32">EBX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="32">ECX</op>
            <op idx="4" suppressed="1" type="reg" w="1" width="32">EDX</op>
        </instruction>
        <instruction asm="CWD" category="CONVERT" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="16">DX</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">AX</op>
        </instruction>
        <instruction asm="CWDE" category="CONVERT" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">AX</op>
        </instruction>
        <instruction asm="DEC" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DEC" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX DEC" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DEC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DEC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DEC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DEC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DEC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DEC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK DEC" category="BINARY" cpl="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK DEC" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK DEC" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK DEC" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DIV" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="8" xtype="u8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DIV" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX DIV" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" width="8">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DIV" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="16">DX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DIV" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DIV" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RAX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RDX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DIV" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="16">DX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DIV" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="DIV" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RAX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RDX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ENTERW" category="MISC" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="imm" width="16"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="4" r="1" suppressed="1" type="reg" w="1" width="16">BP</op>
            <op base="RSP" idx="5" seg="SS" suppressed="1" type="mem" w="1" width="16" xtype="int"/>
        </instruction>
        <instruction asm="ENTER" category="MISC" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="imm" width="16"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="4" r="1" suppressed="1" type="reg" w="1" width="64">RBP</op>
            <op base="RSP" idx="5" seg="SS" suppressed="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="HLT" category="SYSTEM" cpl="0" extension="BASE">
        </instruction>
        <instruction asm="IDIV" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="8" xtype="u8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IDIV" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX IDIV" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" width="8">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IDIV" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="16">DX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IDIV" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IDIV" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RAX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RDX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IDIV" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="16">DX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IDIV" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IDIV" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RAX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RDX</op>
            <op flag_AF="undef" flag_CF="undef" flag_OF="undef" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="8" xtype="u8"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="8">AL</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="8">AL</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX IMUL" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" width="8">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="8">AL</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">DX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RAX</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="64">RDX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">DX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RAX</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="64">RDX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op idx="3" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op idx="3" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op idx="3" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op idx="3" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op idx="3" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op idx="3" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op idx="3" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op idx="3" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op idx="3" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IMUL" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IN" category="IO" cpl="3" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="8">AL</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="IN" category="IO" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="16">AX</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="IN" category="IO" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="IN" category="IO" cpl="3" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="8">AL</op>
            <op idx="2" implicit="1" r="1" type="reg" width="16">DX</op>
            <op flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="IN" category="IO" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="16">AX</op>
            <op idx="2" implicit="1" r="1" type="reg" width="16">DX</op>
            <op flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="IN" category="IO" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" implicit="1" r="1" type="reg" width="16">DX</op>
            <op flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="INC" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="INC" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX INC" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="INC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="INC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="INC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="INC" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="INC" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="INC" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK INC" category="BINARY" cpl="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK INC" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK INC" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK INC" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op flag_AF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="INSB" category="IOSTRINGOP" cpl="3" extension="BASE">
            <op base="RDI" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op flag_DF="r" flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="INSD" category="IOSTRINGOP" cpl="3" extension="BASE">
            <op base="RDI" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="32" xtype="i32"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op flag_DF="r" flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="INSW" category="IOSTRINGOP" cpl="3" extension="BASE">
            <op base="RDI" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="16" xtype="i16"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op flag_DF="r" flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="INT" category="INTERRUPT" cpl="3" extension="BASE">
            <op idx="1" r="1" type="imm" width="8"/>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_AC="w" flag_IF="w" flag_IOPL="r" flag_NT="w" flag_RF="w" flag_TF="w" flag_VIF="w" flag_VM="r/w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="INT3" category="INTERRUPT" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_AC="w" flag_IF="w" flag_IOPL="r" flag_NT="w" flag_RF="w" flag_TF="w" flag_VIF="w" flag_VM="r/w" idx="2" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="INVD" category="SYSTEM" cpl="0" extension="BASE">
        </instruction>
        <instruction asm="INVLPG" category="SYSTEM" cpl="0" extension="BASE">
            <op idx="1" r="1" type="mem" width="8" xtype="u8"/>
        </instruction>
        <instruction asm="IRETW" category="RET" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="80" xtype="int"/>
            <op flag_AC="w" flag_AF="w" flag_CF="w" flag_DF="w" flag_ID="w" flag_IF="w" flag_IOPL="r/w" flag_NT="r/w" flag_OF="w" flag_PF="w" flag_RF="w" flag_SF="w" flag_TF="w" flag_VIF="w" flag_VIP="w" flag_VM="r/w" flag_ZF="w" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="IRETD" category="RET" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="160" xtype="int"/>
            <op flag_AC="w" flag_AF="w" flag_CF="w" flag_DF="w" flag_ID="w" flag_IF="w" flag_IOPL="r/w" flag_NT="r/w" flag_OF="w" flag_PF="w" flag_RF="w" flag_SF="w" flag_TF="w" flag_VIF="w" flag_VIP="w" flag_VM="r/w" flag_ZF="w" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="JB" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JB" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JBE" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JBE" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JL" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JL" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JLE" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JLE" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JMP" category="UNCOND_BR" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RIP</op>
        </instruction>
        <instruction asm="JMP" category="UNCOND_BR" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RIP</op>
        </instruction>
        <instruction asm="JMP" category="UNCOND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
        </instruction>
        <instruction asm="JMP" category="UNCOND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
        </instruction>
        <instruction asm="JMP FAR" category="UNCOND_BR" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="struct"/>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RIP</op>
        </instruction>
        <instruction asm="JMP FAR" category="UNCOND_BR" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="48" xtype="struct"/>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RIP</op>
        </instruction>
        <instruction asm="JMP FAR" category="UNCOND_BR" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="80" xtype="struct"/>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RIP</op>
        </instruction>
        <instruction asm="JNB" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNB" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_CF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNBE" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNBE" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_CF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNL" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNL" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_OF="r" flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNLE" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNLE" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNO" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNO" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNP" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNP" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNS" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNS" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNZ" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JNZ" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JO" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JO" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_OF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JP" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JP" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_PF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JRCXZ" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="64">RCX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
        </instruction>
        <instruction asm="JS" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JS" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_SF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JZ" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="JZ" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="LAHF" category="FLAGOP" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="8">AH</op>
            <op flag_AF="r" flag_CF="r" flag_PF="r" flag_SF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="LAR" category="SYSTEM" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="i16"/>
            <op flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LAR" category="SYSTEM" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="i16"/>
            <op flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LAR" category="SYSTEM" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="i16"/>
            <op flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LAR" category="SYSTEM" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LAR" category="SYSTEM" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LAR" category="SYSTEM" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction agen="R" asm="LEA" category="MISC" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="agen" width="16"/>
        </instruction>
        <instruction agen="RD" asm="LEA" category="MISC" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="agen" width="16"/>
        </instruction>
        <instruction agen="B" asm="LEA" category="MISC" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="agen" width="16"/>
        </instruction>
        <instruction agen="I" asm="LEA" category="MISC" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="agen" width="16"/>
        </instruction>
        <instruction agen="D" asm="LEA" category="MISC" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="agen" width="16"/>
        </instruction>
        <instruction agen="BI" asm="LEA" category="MISC" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="agen" width="16"/>
        </instruction>
        <instruction agen="BD" asm="LEA" category="MISC" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="agen" width="16"/>
        </instruction>
        <instruction agen="ID" asm="LEA" category="MISC" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="agen" width="16"/>
        </instruction>
        <instruction agen="BID" asm="LEA" category="MISC" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="agen" width="16"/>
        </instruction>
        <instruction agen="R" asm="LEA" category="MISC" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="agen" width="32"/>
        </instruction>
        <instruction agen="RD" asm="LEA" category="MISC" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="agen" width="32"/>
        </instruction>
        <instruction agen="B" asm="LEA" category="MISC" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="agen" width="32"/>
        </instruction>
        <instruction agen="I" asm="LEA" category="MISC" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="agen" width="32"/>
        </instruction>
        <instruction agen="D" asm="LEA" category="MISC" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="agen" width="32"/>
        </instruction>
        <instruction agen="BI" asm="LEA" category="MISC" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="agen" width="32"/>
        </instruction>
        <instruction agen="BD" asm="LEA" category="MISC" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="agen" width="32"/>
        </instruction>
        <instruction agen="ID" asm="LEA" category="MISC" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="agen" width="32"/>
        </instruction>
        <instruction agen="BID" asm="LEA" category="MISC" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="agen" width="32"/>
        </instruction>
        <instruction agen="R" asm="LEA" category="MISC" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="agen" width="64"/>
        </instruction>
        <instruction agen="RD" asm="LEA" category="MISC" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="agen" width="64"/>
        </instruction>
        <instruction agen="B" asm="LEA" category="MISC" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="agen" width="64"/>
        </instruction>
        <instruction agen="I" asm="LEA" category="MISC" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="agen" width="64"/>
        </instruction>
        <instruction agen="D" asm="LEA" category="MISC" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="agen" width="64"/>
        </instruction>
        <instruction agen="BI" asm="LEA" category="MISC" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="agen" width="64"/>
        </instruction>
        <instruction agen="BD" asm="LEA" category="MISC" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="agen" width="64"/>
        </instruction>
        <instruction agen="ID" asm="LEA" category="MISC" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="agen" width="64"/>
        </instruction>
        <instruction agen="BID" asm="LEA" category="MISC" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="agen" width="64"/>
        </instruction>
        <instruction asm="LEAVEW" category="MISC" cpl="3" eosz="1" extension="BASE">
            <op base="RBP" idx="1" r="1" seg="SS" suppressed="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">BP</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="16">SP</op>
        </instruction>
        <instruction asm="LEAVE" category="MISC" cpl="3" eosz="3" extension="BASE">
            <op base="RBP" idx="1" r="1" seg="SS" suppressed="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RBP</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
        </instruction>
        <instruction asm="LFS" category="SEGOP" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="struct"/>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">FS</op>
        </instruction>
        <instruction asm="LFS" category="SEGOP" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="48" xtype="struct"/>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">FS</op>
        </instruction>
        <instruction asm="LFS" category="SEGOP" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="80" xtype="struct"/>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">FS</op>
        </instruction>
        <instruction asm="LGDT" category="SYSTEM" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="80" xtype="struct"/>
            <op idx="2" suppressed="1" type="reg" w="1" width="80">GDTR</op>
        </instruction>
        <instruction asm="LGS" category="SEGOP" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="struct"/>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">>GS</op>
        </instruction>
        <instruction asm="LGS" category="SEGOP" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="48" xtype="struct"/>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">GS</op>
        </instruction>
        <instruction asm="LGS" category="SEGOP" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="80" xtype="struct"/>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">GS</op>
        </instruction>
        <instruction asm="LIDT" category="SYSTEM" cpl="0" extension="BASE">
            <op idx="1" r="1" type="mem" width="80" xtype="struct"/>
            <op idx="2" suppressed="1" type="reg" w="1" width="80">>IDTR</op>
        </instruction>
        <instruction asm="LLDT" category="SYSTEM" cpl="0" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="i16"/>
            <op idx="2" suppressed="1" type="reg" w="1" width="80">LDTR</op>
        </instruction>
        <instruction asm="LLDT" category="SYSTEM" cpl="0" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="80">LDTR</op>
        </instruction>
        <instruction asm="LMSW" category="SYSTEM" cpl="0" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="i16"/>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">CR0</op>
        </instruction>
        <instruction asm="LMSW" category="SYSTEM" cpl="0" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">CR0</op>
        </instruction>
        <instruction asm="LODSB" category="STRINGOP" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="8">AL</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op flag_DF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="LODSD" category="STRINGOP" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op flag_DF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="LODSW" category="STRINGOP" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op flag_DF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="LOOP" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
        </instruction>
        <instruction asm="LOOPE" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_ZF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="LOOPNE" category="COND_BR" cpl="3" extension="BASE">
            <op idx="1" r="1" type="relbr" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_ZF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="LSL" category="SYSTEM" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="i16"/>
            <op flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LSL" category="SYSTEM" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="i16"/>
            <op flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LSL" category="SYSTEM" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="i16"/>
            <op flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LSL" category="SYSTEM" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LSL" category="SYSTEM" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LSL" category="SYSTEM" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LSS" category="SEGOP" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="struct"/>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">SS</op>
        </instruction>
        <instruction asm="LSS" category="SEGOP" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="48" xtype="struct"/>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">SS</op>
        </instruction>
        <instruction asm="LSS" category="SEGOP" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="80" xtype="struct"/>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">SS</op>
        </instruction>
        <instruction asm="LTR" category="SYSTEM" cpl="0" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="i16"/>
            <op idx="2" suppressed="1" type="reg" w="1" width="80">TR</op>
        </instruction>
        <instruction asm="LTR" category="SYSTEM" cpl="0" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="80">TR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
        </instruction>
        <instruction asm="REX MOV" category="DATAXFER" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
        </instruction>
        <instruction asm="REX MOV" category="DATAXFER" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
        </instruction>
        <instruction asm="REX MOV" category="DATAXFER" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
        </instruction>
        <instruction asm="REX MOV" category="DATAXFER" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="16" xtype="i16"/>
            <op idx="2" r="1" type="reg" width="16">ES,CS,SS,DS,FS,GS</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">ES,CS,SS,DS,FS,GS</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="16">ES,CS,SS,DS,FS,GS</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="16">ES,CS,SS,DS,FS,GS</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">ES,SS,DS,FS,GS</op>
            <op idx="2" r="1" type="mem" width="16" xtype="i16"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">ES,SS,DS,FS,GS</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="8">AL</op>
            <op idx="2" r="1" seg="DS" type="mem" width="8" xtype="u8"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="16">AX</op>
            <op idx="2" r="1" seg="DS" type="mem" width="16" xtype="int"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" r="1" seg="DS" type="mem" width="32" xtype="int"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="64">RAX</op>
            <op idx="2" r="1" seg="DS" type="mem" width="64" xtype="int"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" extension="BASE">
            <op idx="1" seg="DS" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">AL</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" seg="DS" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="16">AX</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" seg="DS" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="32">EAX</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" seg="DS" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="64">RAX</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
        </instruction>
        <instruction asm="REX MOV" category="DATAXFER" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="16"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="64"/>
        </instruction>
        <instruction asm="MOVSB" category="STRINGOP" cpl="3" extension="BASE">
            <op base="RDI" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="8" xtype="u8"/>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op flag_DF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="MOVSD" category="STRINGOP" cpl="3" extension="BASE">
            <op base="RDI" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="32" xtype="i32"/>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op flag_DF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="MOVSW" category="STRINGOP" cpl="3" extension="BASE">
            <op base="RDI" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="16" xtype="i16"/>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op flag_DF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="MOVSX" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
        </instruction>
        <instruction asm="MOVSX" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
        </instruction>
        <instruction asm="MOVSX" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
        </instruction>
        <instruction asm="MOVSX" category="DATAXFER" cpl="3" eosz="1" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="16">AX,CX,DX,BX,SP,BP,SI,DI</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
        </instruction>
        <instruction asm="REX MOVSX" category="DATAXFER" cpl="3" eosz="1" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
        </instruction>
        <instruction asm="MOVSX" category="DATAXFER" cpl="3" eosz="2" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="32">EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
        </instruction>
        <instruction asm="REX MOVSX" category="DATAXFER" cpl="3" eosz="2" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
        </instruction>
        <instruction asm="REX MOVSX" category="DATAXFER" cpl="3" eosz="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
        </instruction>
        <instruction asm="MOVSX" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="i16"/>
        </instruction>
        <instruction asm="MOVSX" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="i16"/>
        </instruction>
        <instruction asm="MOVSX" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
        </instruction>
        <instruction asm="MOVSX" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
        </instruction>
        <instruction asm="MOVZX" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
        </instruction>
        <instruction asm="MOVZX" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
        </instruction>
        <instruction asm="MOVZX" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
        </instruction>
        <instruction asm="MOVZX" category="DATAXFER" cpl="3" eosz="1" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="16">AX,CX,DX,BX,SP,BP,SI,DI</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
        </instruction>
        <instruction asm="REX MOVZX" category="DATAXFER" cpl="3" eosz="1" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
        </instruction>
        <instruction asm="MOVZX" category="DATAXFER" cpl="3" eosz="2" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="32">EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
        </instruction>
        <instruction asm="REX MOVZX" category="DATAXFER" cpl="3" eosz="2" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
        </instruction>
        <instruction asm="REX MOVZX" category="DATAXFER" cpl="3" eosz="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
        </instruction>
        <instruction asm="MOVZX" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="i16"/>
        </instruction>
        <instruction asm="MOVZX" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="i16"/>
        </instruction>
        <instruction asm="MOVZX" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
        </instruction>
        <instruction asm="MOVZX" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="0" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">CR0,CR2,CR3,CR4,CR8</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="0" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">CR0,CR2,CR3,CR4,CR8</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="0" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">DR0,DR1,DR2,DR3,DR4,DR5,DR6,DR7</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
        </instruction>
        <instruction asm="MOV" category="DATAXFER" cpl="0" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">DR0,DR1,DR2,DR3,DR4,DR5,DR6,DR7</op>
        </instruction>
        <instruction asm="MUL" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="8" xtype="u8"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="8">AL</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="MUL" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="8">AL</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX MUL" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" width="8">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="8">AL</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="MUL" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">DX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="MUL" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="MUL" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RAX</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="64">RDX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="MUL" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="16">DX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="MUL" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="MUL" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RAX</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="64">RDX</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="undef" flag_SF="undef" flag_ZF="undef" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="NEG" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="NEG" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX NEG" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="NEG" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="NEG" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="NEG" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="NEG" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="NEG" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="NEG" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK NEG" category="BINARY" cpl="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK NEG" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK NEG" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK NEG" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="NOP" category="NOP" cpl="3" extension="BASE">
        </instruction>
        <instruction asm="NOT" category="LOGICAL" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
        </instruction>
        <instruction asm="NOT" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
        </instruction>
        <instruction asm="REX NOT" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
        </instruction>
        <instruction asm="NOT" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
        </instruction>
        <instruction asm="NOT" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
        </instruction>
        <instruction asm="NOT" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="NOT" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
        </instruction>
        <instruction asm="NOT" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
        </instruction>
        <instruction asm="NOT" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
        </instruction>
        <instruction asm="LOCK NOT" category="LOGICAL" cpl="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
        </instruction>
        <instruction asm="LOCK NOT" category="LOGICAL" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
        </instruction>
        <instruction asm="LOCK NOT" category="LOGICAL" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
        </instruction>
        <instruction asm="LOCK NOT" category="LOGICAL" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX OR" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX OR" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX OR" category="LOGICAL" cpl="3" extension="BA`SE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX OR" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX OR" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="8">AL</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="16">AX</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="64">RAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK OR" category="LOGICAL" cpl="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK OR" category="LOGICAL" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK OR" category="LOGICAL" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK OR" category="LOGICAL" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK OR" category="LOGICAL" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK OR" category="LOGICAL" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK OR" category="LOGICAL" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK OR" category="LOGICAL" cpl="3" extension="BASE" locked="1" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK REX OR" category="LOGICAL" cpl="3" extension="BASE" locked="1" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK OR" category="LOGICAL" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK OR" category="LOGICAL" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK OR" category="LOGICAL" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="OUT" category="IO" cpl="3" extension="BASE">
            <op idx="1" r="1" type="imm" width="8"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">AL</op>
            <op flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="OUT" category="IO" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="imm" width="8"/>
            <op idx="2" implicit="1" r="1" type="reg" width="16">AX</op>
            <op flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="OUT" category="IO" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="imm" width="8"/>
            <op idx="2" implicit="1" r="1" type="reg" width="32">EAX</op>
            <op flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="OUT" category="IO" cpl="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="16">DX</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">AL</op>
            <op flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="OUT" category="IO" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="16">DX</op>
            <op idx="2" implicit="1" r="1" type="reg" width="16">AX</op>
            <op flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="OUT" category="IO" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="16">DX</op>
            <op idx="2" implicit="1" r="1" type="reg" width="32">EAX</op>
            <op flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="OUTSB" category="IOSTRINGOP" cpl="3" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op flag_DF="r" flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="OUTSD" category="IOSTRINGOP" cpl="3" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op flag_DF="r" flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="OUTSW" category="IOSTRINGOP" cpl="3" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op flag_DF="r" flag_IOPL="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="POP" category="POP" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="16" xtype="int"/>
        </instruction>
        <instruction asm="POP" category="POP" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="64" xtype="int"/>
        </instruction>
        <instruction asm="POP" category="POP" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="16" xtype="int"/>
        </instruction>
        <instruction asm="POP" category="POP" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="64" xtype="int"/>
        </instruction>
        <instruction asm="POPW" category="POP" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="16">FS</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="16" xtype="int"/>
        </instruction>
        <instruction asm="POP" category="POP" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="16">FS</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="64" xtype="int"/>
        </instruction>
        <instruction asm="POPW" category="POP" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="16">GS</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="16" xtype="int"/>
        </instruction>
        <instruction asm="POP" category="POP" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" type="reg" w="1" width="16">GS</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="64" xtype="int"/>
        </instruction>
        <instruction asm="POPFW" category="POP" cpl="3" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="2" r="1" seg="SS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op flag_AC="w" flag_AF="w" flag_CF="w" flag_DF="w" flag_ID="w" flag_IF="w" flag_IOPL="r/w" flag_NT="w" flag_OF="w" flag_PF="w" flag_RF="w" flag_SF="w" flag_TF="w" flag_VIF="w" flag_VIP="r" flag_VM="r" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="PUSH" category="PUSH" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" seg="SS" suppressed="1" type="mem" w="1" width="16" xtype="int"/>
        </instruction>
        <instruction asm="PUSH" category="PUSH" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" seg="SS" suppressed="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="PUSH" category="PUSH" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" seg="SS" suppressed="1" type="mem" w="1" width="16" xtype="int"/>
        </instruction>
        <instruction asm="PUSH" category="PUSH" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" seg="SS" suppressed="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="PUSHW" category="PUSH" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="imm" width="16"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" seg="SS" suppressed="1" type="mem" w="1" width="16" xtype="int"/>
        </instruction>
        <instruction asm="PUSH" category="PUSH" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="imm" width="32"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" seg="SS" suppressed="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="PUSHW" category="PUSH" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="imm" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" seg="SS" suppressed="1" type="mem" w="1" width="16" xtype="int"/>
        </instruction>
        <instruction asm="PUSH" category="PUSH" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="imm" width="8"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" seg="SS" suppressed="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="PUSHW" category="PUSH" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="16">FS</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" seg="SS" suppressed="1" type="mem" w="1" width="16" xtype="int"/>
        </instruction>
        <instruction asm="PUSH" category="PUSH" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="16">FS</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" seg="SS" suppressed="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="PUSHW" category="PUSH" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="16">GS</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" seg="SS" suppressed="1" type="mem" w="1" width="16" xtype="int"/>
        </instruction>
        <instruction asm="PUSH" category="PUSH" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="16">GS</op>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="3" seg="SS" suppressed="1" type="mem" w="1" width="64" xtype="int"/>
        </instruction>
        <instruction asm="PUSHFW" category="PUSH" cpl="3" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op base="RSP" idx="2" seg="SS" suppressed="1" type="mem" w="1" width="16" xtype="i16"/>
            <op flag_AC="r" flag_AF="r" flag_CF="r" flag_DF="r" flag_ID="r" flag_IF="r" flag_IOPL="r" flag_NT="r" flag_OF="r" flag_PF="r" flag_RF="r" flag_SF="r" flag_TF="r" flag_VIF="r" flag_VIP="r" flag_VM="r" flag_ZF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX RCL" category="ROTATE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX RCL" category="ROTATE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX RCL" category="ROTATE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCL" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX RCR" category="ROTATE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX RCR" category="ROTATE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="r/w" flag_OF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX RCR" category="ROTATE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RCR" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="r/cw" flag_OF="undef" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RDMSR" category="SYSTEM" cpl="0" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op idx="3" r="1" suppressed="1" type="reg" width="32">ECX</op>
            <op idx="4" r="1" suppressed="1" type="reg" width="64">MSRS</op>
        </instruction>
        <instruction asm="RDPMC" category="SYSTEM" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op idx="3" r="1" suppressed="1" type="reg" width="32">ECX</op>
            <op idx="4" r="1" suppressed="1" type="reg" width="64">MSRS</op>
        </instruction>
        <instruction asm="RDTSC" category="SYSTEM" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="32">EDX</op>
            <op idx="3" r="1" suppressed="1" type="reg" width="64">TSC</op>
        </instruction>
        <instruction asm="REPE CMPSB" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op base="RSI" idx="1" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op conditionalWrite="1" flag_AF="cw" flag_CF="cw" flag_DF="r" flag_OF="cw" flag_PF="cw" flag_SF="cw" flag_ZF="r/cw" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REPE CMPSD" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op base="RSI" idx="1" r="1" seg="DS" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op conditionalWrite="1" flag_AF="cw" flag_CF="cw" flag_DF="r" flag_OF="cw" flag_PF="cw" flag_SF="cw" flag_ZF="r/cw" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REPE CMPSW" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op base="RSI" idx="1" r="1" seg="DS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op conditionalWrite="1" flag_AF="cw" flag_CF="cw" flag_DF="r" flag_OF="cw" flag_PF="cw" flag_SF="cw" flag_ZF="r/cw" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REPE SCASB" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op idx="1" r="1" suppressed="1" type="reg" width="8">AL</op>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op conditionalWrite="1" flag_AF="cw" flag_CF="cw" flag_DF="r" flag_OF="cw" flag_PF="cw" flag_SF="cw" flag_ZF="r/cw" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REPE SCASD" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op idx="1" r="1" suppressed="1" type="reg" width="32">EAX</op>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op conditionalWrite="1" flag_AF="cw" flag_CF="cw" flag_DF="r" flag_OF="cw" flag_PF="cw" flag_SF="cw" flag_ZF="r/cw" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REPE SCASW" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op idx="1" r="1" suppressed="1" type="reg" width="16">AX</op>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op conditionalWrite="1" flag_AF="cw" flag_CF="cw" flag_DF="r" flag_OF="cw" flag_PF="cw" flag_SF="cw" flag_ZF="r/cw" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REPNE CMPSB" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op base="RSI" idx="1" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op conditionalWrite="1" flag_AF="cw" flag_CF="cw" flag_DF="r" flag_OF="cw" flag_PF="cw" flag_SF="cw" flag_ZF="r/cw" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REPNE CMPSD" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op base="RSI" idx="1" r="1" seg="DS" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op conditionalWrite="1" flag_AF="cw" flag_CF="cw" flag_DF="r" flag_OF="cw" flag_PF="cw" flag_SF="cw" flag_ZF="r/cw" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REPNE CMPSW" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op base="RSI" idx="1" r="1" seg="DS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op conditionalWrite="1" flag_AF="cw" flag_CF="cw" flag_DF="r" flag_OF="cw" flag_PF="cw" flag_SF="cw" flag_ZF="r/cw" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REPNE SCASB" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op idx="1" r="1" suppressed="1" type="reg" width="8">AL</op>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op conditionalWrite="1" flag_AF="cw" flag_CF="cw" flag_DF="r" flag_OF="cw" flag_PF="cw" flag_SF="cw" flag_ZF="r/cw" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REPNE SCASD" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op idx="1" r="1" suppressed="1" type="reg" width="32">EAX</op>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op conditionalWrite="1" flag_AF="cw" flag_CF="cw" flag_DF="r" flag_OF="cw" flag_PF="cw" flag_SF="cw" flag_ZF="r/cw" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REPNE SCASW" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op idx="1" r="1" suppressed="1" type="reg" width="16">AX</op>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op conditionalWrite="1" flag_AF="cw" flag_CF="cw" flag_DF="r" flag_OF="cw" flag_PF="cw" flag_SF="cw" flag_ZF="r/cw" idx="4" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REPE INSB" category="IOSTRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" flag_IOPL="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE INSB" category="IOSTRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" flag_IOPL="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE INSD" category="IOSTRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="32" xtype="i32"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" flag_IOPL="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE INSD" category="IOSTRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="32" xtype="i32"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" flag_IOPL="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE INSW" category="IOSTRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="16" xtype="i16"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" flag_IOPL="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE INSW" category="IOSTRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="16" xtype="i16"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" flag_IOPL="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE LODSB" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op conditionalWrite="1" idx="1" suppressed="1" type="reg" w="1" width="8">AL</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE LODSB" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op conditionalWrite="1" idx="1" suppressed="1" type="reg" w="1" width="8">AL</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE LODSD" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op conditionalWrite="1" idx="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE LODSD" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op conditionalWrite="1" idx="1" suppressed="1" type="reg" w="1" width="32">EAX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE LODSW" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op conditionalWrite="1" idx="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE LODSW" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op conditionalWrite="1" idx="1" suppressed="1" type="reg" w="1" width="16">AX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE MOVSB" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="8" xtype="u8"/>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE MOVSB" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="8" xtype="u8"/>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE MOVSD" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="32" xtype="i32"/>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE MOVSD" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="32" xtype="i32"/>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE MOVSW" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="16" xtype="i16"/>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE MOVSW" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="16" xtype="i16"/>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE OUTSB" category="IOSTRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op idx="1" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" flag_IOPL="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE OUTSB" category="IOSTRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op idx="1" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" flag_IOPL="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE OUTSD" category="IOSTRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op idx="1" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" flag_IOPL="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE OUTSD" category="IOSTRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op idx="1" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" flag_IOPL="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE OUTSW" category="IOSTRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op idx="1" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" flag_IOPL="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE OUTSW" category="IOSTRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op idx="1" r="1" suppressed="1" type="reg" width="16">DX</op>
            <op base="RSI" idx="2" r="1" seg="DS" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" flag_IOPL="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE STOSB" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="8">AL</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE STOSB" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="8">AL</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE STOSD" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="32" xtype="i32"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="32">EAX</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE STOSD" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="32" xtype="i32"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="32">EAX</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPE STOSW" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="3">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="16" xtype="i16"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">AX</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REPNE STOSW" category="STRINGOP" cpl="3" eosz="2" extension="BASE" rep="2">
            <op base="RDI" conditionalWrite="1" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="16" xtype="i16"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">AX</op>
            <op conditionalWrite="1" idx="3" r="1" suppressed="1" type="reg" w="1" width="64">RCX</op>
            <op flag_DF="r" idx="4" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="RETFW" category="RET" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="imm" width="16"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="4" r="1" seg="SS" suppressed="1" type="mem" width="32" xtype="int"/>
        </instruction>
        <instruction asm="RETF" category="RET" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="imm" width="16"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="4" r="1" seg="SS" suppressed="1" type="mem" width="64" xtype="int"/>
        </instruction>
        <instruction asm="RETFQ" category="RET" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="imm" width="16"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="4" r="1" seg="SS" suppressed="1" type="mem" width="128" xtype="int"/>
        </instruction>
        <instruction asm="RETFW" category="RET" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="32" xtype="int"/>
        </instruction>
        <instruction asm="RETF" category="RET" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="64" xtype="int"/>
        </instruction>
        <instruction asm="RETFQ" category="RET" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="128" xtype="int"/>
        </instruction>
        <instruction asm="RET" category="RET" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="imm" width="16"/>
            <op idx="2" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="3" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="4" r="1" seg="SS" suppressed="1" type="mem" width="64" xtype="int"/>
        </instruction>
        <instruction asm="RET" category="RET" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op base="RSP" idx="3" r="1" seg="SS" suppressed="1" type="mem" width="64" xtype="int"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ROL" category="ROTATE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ROL" category="ROTATE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ROL" category="ROTATE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROL" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ROR" category="ROTATE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ROR" category="ROTATE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_CF="w" flag_OF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX ROR" category="ROTATE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="ROR" category="ROTATE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_CF="cw" flag_OF="undef" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="RSM" category="SYSRET" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op flag_AC="w" flag_AF="w" flag_CF="w" flag_DF="w" flag_ID="w" flag_IF="w" flag_IOPL="w" flag_NT="w" flag_OF="w" flag_PF="w" flag_RF="w" flag_SF="w" flag_TF="w" flag_VIF="w" flag_VIP="w" flag_VM="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAHF" category="FLAGOP" cpl="3" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" width="8">AH</op>
            <op flag_AF="w" flag_CF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SAR" category="SHIFT" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SAR" category="SHIFT" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SAR" category="SHIFT" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SAR" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SBB" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SBB" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SBB" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SBB" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SBB" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="8">AL</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="16">AX</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SBB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="64">RAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SBB" category="BINARY" cpl="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SBB" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SBB" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SBB" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SBB" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SBB" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SBB" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SBB" category="BINARY" cpl="3" extension="BASE" locked="1" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK REX SBB" category="BINARY" cpl="3" extension="BASE" locked="1" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SBB" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SBB" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SBB" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="r/w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SCASB" category="STRINGOP" cpl="3" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" width="8">AL</op>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="w" flag_CF="w" flag_DF="r" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SCASD" category="STRINGOP" cpl="3" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" width="32">EAX</op>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="32" xtype="i32"/>
            <op flag_AF="w" flag_CF="w" flag_DF="r" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SCASW" category="STRINGOP" cpl="3" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" width="16">AX</op>
            <op base="RDI" idx="2" r="1" seg="ES" suppressed="1" type="mem" width="16" xtype="i16"/>
            <op flag_AF="w" flag_CF="w" flag_DF="r" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SETB" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_CF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETB" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_CF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETB" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_CF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETBE" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_CF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETBE" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_CF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETBE" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_CF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETL" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_OF="r" flag_SF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETL" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_OF="r" flag_SF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETL" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_OF="r" flag_SF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETLE" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETLE" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETLE" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNB" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_CF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNB" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_CF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETNB" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_CF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNBE" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_CF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNBE" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_CF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETNBE" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_CF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNL" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_OF="r" flag_SF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNL" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_OF="r" flag_SF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETNL" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_OF="r" flag_SF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNLE" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNLE" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETNLE" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_OF="r" flag_SF="r" flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNO" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_OF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNO" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_OF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETNO" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_OF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNP" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_PF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNP" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_PF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETNP" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_PF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNS" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_SF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNS" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_SF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETNS" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_SF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNZ" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETNZ" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETNZ" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETO" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_OF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETO" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_OF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETO" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_OF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETP" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_PF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETP" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_PF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETP" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_PF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETS" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_SF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETS" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_SF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETS" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_SF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETZ" category="SETCC" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="8" xtype="u8"/>
            <op flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SETZ" category="SETCC" cpl="3" extension="BASE" rex="0">
            <op idx="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="REX SETZ" category="SETCC" cpl="3" extension="BASE" rex="1">
            <op idx="1" type="reg" w="1" width="8">GPR</op>
            <op flag_ZF="r" idx="2" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="SGDT" category="SYSTEM" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="80" xtype="struct"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="80">>GDTR</op>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SHL" category="SHIFT" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SHL" category="SHIFT" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SHL" category="SHIFT" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHL" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHLD" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHLD" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHLD" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHLD" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHLD" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHLD" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHLD" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op idx="3" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHLD" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op idx="3" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHLD" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op idx="3" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHLD" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op idx="3" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHLD" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op idx="3" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHLD" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op idx="3" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SHR" category="SHIFT" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SHR" category="SHIFT" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="imm" width="8">1</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SHR" category="SHIFT" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHR" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHRD" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHRD" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHRD" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHRD" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHRD" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHRD" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op idx="3" r="1" type="imm" width="8"/>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHRD" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op idx="3" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHRD" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op idx="3" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHRD" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op idx="3" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHRD" category="SHIFT" cpl="3" eosz="1" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op idx="3" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHRD" category="SHIFT" cpl="3" eosz="2" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op idx="3" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SHRD" category="SHIFT" cpl="3" eosz="3" extension="BASE">
            <op conditionalWrite="1" idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op idx="3" implicit="1" r="1" type="reg" width="8">CL</op>
            <op conditionalWrite="1" flag_AF="undef" flag_CF="cw" flag_OF="undef" flag_PF="cw" flag_SF="cw" flag_ZF="cw" idx="4" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SIDT" category="SYSTEM" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="80" xtype="struct"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="80">>IDTR</op>
        </instruction>
        <instruction asm="SLDT" category="SYSTEM" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="16" xtype="i16"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="80">LDTR</op>
        </instruction>
        <instruction asm="SLDT" category="SYSTEM" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="80">LDTR</op>
        </instruction>
        <instruction asm="SLDT" category="SYSTEM" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="80">LDTR</op>
        </instruction>
        <instruction asm="SLDT" category="SYSTEM" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="80">LDTR</op>
        </instruction>
        <instruction asm="SMSW" category="SYSTEM" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="16" xtype="i16"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="64">CR0</op>
        </instruction>
        <instruction asm="SMSW" category="SYSTEM" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="64">CR0</op>
        </instruction>
        <instruction asm="SMSW" category="SYSTEM" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="64">CR0</op>
        </instruction>
        <instruction asm="SMSW" category="SYSTEM" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="64">CR0</op>
        </instruction>
        <instruction asm="STC" category="FLAGOP" cpl="3" extension="BASE">
            <op flag_CF="w" idx="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="STD" category="FLAGOP" cpl="3" extension="BASE">
            <op flag_DF="w" idx="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="STI" category="FLAGOP" cpl="3" extension="BASE">
            <op flag_IF="w" flag_IOPL="r" flag_VIF="w" idx="1" r="1" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="STOSB" category="STRINGOP" cpl="3" extension="BASE">
            <op base="RDI" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="8">AL</op>
            <op flag_DF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="STOSD" category="STRINGOP" cpl="3" extension="BASE">
            <op base="RDI" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="32" xtype="i32"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="32">EAX</op>
            <op flag_DF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="STOSW" category="STRINGOP" cpl="3" extension="BASE">
            <op base="RDI" idx="1" seg="ES" suppressed="1" type="mem" w="1" width="16" xtype="i16"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="16">AX</op>
            <op flag_DF="r" idx="3" r="1" suppressed="1" type="flags"/>
        </instruction>
        <instruction asm="STR" category="SYSTEM" cpl="3" extension="BASE">
            <op idx="1" type="mem" w="1" width="16" xtype="i16"/>
            <op idx="2" r="1" suppressed="1" type="reg" width="80">TR</op>
        </instruction>
        <instruction asm="STR" category="SYSTEM" cpl="3" eosz="1" extension="BASE">
            <op idx="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="80">TR</op>
        </instruction>
        <instruction asm="STR" category="SYSTEM" cpl="3" eosz="2" extension="BASE">
            <op idx="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="80">TR</op>
        </instruction>
        <instruction asm="STR" category="SYSTEM" cpl="3" eosz="3" extension="BASE">
            <op idx="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="80">TR</op>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SUB" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SUB" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SUB" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SUB" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX SUB" category="BINARY" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="8">AL</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="16">AX</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SUB" category="BINARY" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="64">RAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SUB" category="BINARY" cpl="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SUB" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SUB" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SUB" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SUB" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SUB" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SUB" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SUB" category="BINARY" cpl="3" extension="BASE" locked="1" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK REX SUB" category="BINARY" cpl="3" extension="BASE" locked="1" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SUB" category="BINARY" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SUB" category="BINARY" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK SUB" category="BINARY" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SYSENTER" category="SYSCALL" cpl="3" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op flag_IF="w" flag_RF="w" flag_VM="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="SYSEXIT" category="SYSRET" cpl="0" extension="BASE">
            <op idx="1" suppressed="1" type="reg" w="1" width="64">RIP</op>
            <op idx="2" suppressed="1" type="reg" w="1" width="64">RSP</op>
            <op idx="3" r="1" suppressed="1" type="reg" width="64">RCX</op>
            <op idx="4" r="1" suppressed="1" type="reg" width="64">RDX</op>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX TEST" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="mem" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX TEST" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="mem" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX TEST" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="8">AL</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="16">AX</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="32">EAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="TEST" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" width="64">RAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="UD2" category="MISC" cpl="3" extension="BASE">
        </instruction>
        <instruction asm="VERR" category="SYSTEM" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="i16"/>
            <op flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="VERR" category="SYSTEM" cpl="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="VERW" category="SYSTEM" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" width="16" xtype="i16"/>
            <op flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="VERW" category="SYSTEM" cpl="3" extension="BASE">
            <op idx="1" r="1" type="reg" width="16">GPR</op>
            <op flag_ZF="w" idx="2" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="WBINVD" category="SYSTEM" cpl="0" extension="BASE">
        </instruction>
        <instruction asm="WRMSR" category="SYSTEM" cpl="0" extension="BASE">
            <op idx="1" r="1" suppressed="1" type="reg" width="32">EAX</op>
            <op idx="2" r="1" suppressed="1" type="reg" width="32">EDX</op>
            <op idx="3" r="1" suppressed="1" type="reg" width="32">ECX</op>
            <op idx="4" suppressed="1" type="reg" w="1" width="64">MSRS</op>
        </instruction>
        <instruction asm="XADD" category="SEMAPHORE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX XADD" category="SEMAPHORE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" w="1" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XADD" category="SEMAPHORE" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX XADD" category="SEMAPHORE" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" w="1" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XADD" category="SEMAPHORE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" w="1" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XADD" category="SEMAPHORE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" w="1" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XADD" category="SEMAPHORE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" w="1" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XADD" category="SEMAPHORE" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" w="1" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XADD" category="SEMAPHORE" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" w="1" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XADD" category="SEMAPHORE" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" w="1" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XADD" category="SEMAPHORE" cpl="3" extension="BASE" locked="1" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK REX XADD" category="SEMAPHORE" cpl="3" extension="BASE" locked="1" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" w="1" width="8">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XADD" category="SEMAPHORE" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" w="1" width="16">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XADD" category="SEMAPHORE" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" w="1" width="32">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XADD" category="SEMAPHORE" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" w="1" width="64">GPR</op>
            <op flag_AF="w" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XCHG" category="DATAXFER" cpl="3" extension="BASE" locked="1" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
        </instruction>
        <instruction asm="REX XCHG" category="DATAXFER" cpl="3" extension="BASE" locked="1" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" w="1" width="8">GPR</op>
        </instruction>
        <instruction asm="XCHG" category="DATAXFER" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
        </instruction>
        <instruction asm="REX XCHG" category="DATAXFER" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" w="1" width="8">GPR</op>
        </instruction>
        <instruction asm="XCHG" category="DATAXFER" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" w="1" width="16">GPR</op>
        </instruction>
        <instruction asm="XCHG" category="DATAXFER" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" w="1" width="32">GPR</op>
        </instruction>
        <instruction asm="XCHG" category="DATAXFER" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" w="1" width="64">GPR</op>
        </instruction>
        <instruction asm="XCHG" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" w="1" width="16">GPR</op>
        </instruction>
        <instruction asm="XCHG" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" w="1" width="32">GPR</op>
        </instruction>
        <instruction asm="XCHG" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" w="1" width="64">GPR</op>
        </instruction>
        <instruction asm="XCHG" category="DATAXFER" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" w="1" width="16">AX</op>
        </instruction>
        <instruction asm="XCHG" category="DATAXFER" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" w="1" width="32">EAX</op>
        </instruction>
        <instruction asm="XCHG" category="DATAXFER" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" implicit="1" r="1" type="reg" w="1" width="64">RAX</op>
        </instruction>
        <instruction asm="XLAT" category="MISC" cpl="3" extension="BASE">
            <op base="RBX" idx="1" r="1" seg="DS" suppressed="1" type="mem" width="8" xtype="u8"/>
            <op idx="2" suppressed="1" type="reg" w="1" width="8">AL</op>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX XOR" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX XOR" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX XOR" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX XOR" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" extension="BASE" rex="0">
            <op idx="1" r="1" type="reg" w="1" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="REX XOR" category="LOGICAL" cpl="3" extension="BASE" rex="1">
            <op idx="1" r="1" type="reg" w="1" width="8">GPR</op>
            <op idx="2" r="1" type="mem" width="8" xtype="u8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="16">GPR</op>
            <op idx="2" r="1" type="mem" width="16" xtype="int"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="32">GPR</op>
            <op idx="2" r="1" type="mem" width="32" xtype="int"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" r="1" type="reg" w="1" width="64">GPR</op>
            <op idx="2" r="1" type="mem" width="64" xtype="int"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="8">AL</op>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="1" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="16">AX</op>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="2" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="32">EAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="XOR" category="LOGICAL" cpl="3" eosz="3" extension="BASE">
            <op idx="1" implicit="1" r="1" type="reg" w="1" width="64">RAX</op>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XOR" category="LOGICAL" cpl="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XOR" category="LOGICAL" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="16"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XOR" category="LOGICAL" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XOR" category="LOGICAL" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="32"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XOR" category="LOGICAL" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XOR" category="LOGICAL" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XOR" category="LOGICAL" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="imm" width="8"/>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XOR" category="LOGICAL" cpl="3" extension="BASE" locked="1" rex="0">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">AL,CL,DL,BL,AH,CH,DH,BH</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK REX XOR" category="LOGICAL" cpl="3" extension="BASE" locked="1" rex="1">
            <op idx="1" r="1" type="mem" w="1" width="8" xtype="u8"/>
            <op idx="2" r="1" type="reg" width="8">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XOR" category="LOGICAL" cpl="3" eosz="1" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="16" xtype="int"/>
            <op idx="2" r="1" type="reg" width="16">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XOR" category="LOGICAL" cpl="3" eosz="2" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="32" xtype="int"/>
            <op idx="2" r="1" type="reg" width="32">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
        <instruction asm="LOCK XOR" category="LOGICAL" cpl="3" eosz="3" extension="BASE" locked="1">
            <op idx="1" r="1" type="mem" w="1" width="64" xtype="int"/>
            <op idx="2" r="1" type="reg" width="64">GPR</op>
            <op flag_AF="undef" flag_CF="w" flag_OF="w" flag_PF="w" flag_SF="w" flag_ZF="w" idx="3" suppressed="1" type="flags" w="1"/>
        </instruction>
    </extension>
    <extension ex="SSE2">
        <instruction asm="LFENCE" category="MISC" cpl="3" extension="SSE2">
        </instruction>
        <instruction asm="MFENCE" category="MISC" cpl="3" extension="SSE2">
        </instruction>
        <instruction asm="SFENCE" category="MISC" cpl="3" extension="SSE2">
        </instruction>
    </extension>
    <extension name="CLFSH">        <instruction asm="CLFLUSH" category="MISC" cpl="3" extension="CLFSH">
            <op idx="1" r="1" type="mem" width="64"/>
        </instruction>
        <instruction asm="CLFLUSH" category="MISC" cpl="3" extension="CLFSH">
            <op idx="1" r="1" type="mem" width="32"/>
        </instruction>
        <instruction asm="CLFLUSH" category="MISC" cpl="3" extension="CLFSH">
            <op idx="1" r="1" type="mem" width="16"/>
        </instruction>
        <instruction asm="CLFLUSH" category="MISC" cpl="3" extension="CLFSH">
            <op idx="1" r="1" type="mem" width="8"/>
        </instruction>
    </extension>
</root>
